The hookIt module

 .--.
/.-. '----------.
\'-' .--"--""-"-'
 '--'

Nodebite 2014, Thomas Frank

--------------------------------------------------------------

This module does nothing in itself.
It is a  helper module that simplifies listening
to hooks when you write class based code in other modules

It also autoloads all your classes for you assuming they
are stored in a subfolder to your module named "classes"
and with filenames following the pattern "classname.class.php".

When you use it in other modules please add a dependency
to hook_it in your .info file:

dependencies[] = hook_it
--------------------------------------------------------------

IMPORTANT: In order for autoloading to work correctly
and without conflicts you must set a namespace in all php files
in your module:

<?php namespace my_module_name;

We use namespacing since Drupal wouldn't be able to use
two modules with the same class names in otherwise.

Please note:
To simplify setup (and changes to your module name), 
hookIt will attempt to set the correct namespace automatically
in all class files, but can only do so Drupal has write 
rights to write to the class folder).

--------------------------------------------------------------

Usage: Connect your methods to hooks by

1) Extending your class from HookIt (note the backslash):

   class myClass extends \HookIt {...}

2) Telling hookIt which methods that should be connected
   to Drupal hooks in your constructor (or any method you
   call in your constructor):
   
   $this->hookIt(array(
     "hookName" => "methodName",  [OR]
     "hookName1, hookName2" => "methodName", [OR]
     "hookName" => "methodName1, methodName2"
   ));


--------------------------------------------------------------

IMPORTANT: A note on visibility!
Methods that you hook must be public or protected,
they can not be private!